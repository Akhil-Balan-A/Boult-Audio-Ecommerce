<%- include("../../views/partials/admin/sidebar") %>
<%- include("../../views/partials/admin/header") %>
<style>
    /* Table styling */
    .table-responsive table {
        border-collapse: separate;
        border-spacing: 0;
        width: 100%;
        margin-bottom: 1rem;
        background-color: #fff;
    }
    .table thead th {
        background-color: rgba(8, 129, 120, 0.2);
        font-weight: 600;
        text-align: left;
    }
    .table-hover tbody tr:hover {
        background-color: #f1f3f5;
    }
    /* Align action buttons to the right */
    .text-end {
        text-align: right;
    }
    .content-main {
        padding: 1.5rem;
        background-color: #f4f6f9;
        border-radius: 8px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }
    /* Custom styles for modern dropdown */
    .dropdown-menu {
        border-radius: 0.5rem;
        box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.15);
        overflow: hidden;
        transform-origin: top;
        animation: dropdown-animation 0.3s ease-in-out;
    }
    .dropdown-item {
        padding: 8px 16px;
        font-weight: 500;
        color: #333;
        transition: background-color 0.2s ease, color 0.2s ease;
    }
    .dropdown-item:hover {
        background-color: #f0f0f5;
        color: #007bff;
    }
    #dt-search-0 {
    width: 420px; /* Adjust width as needed */
    height: 40px; /* Adjust height as needed */
    }

    .btn-switch {
        position: relative;
        color: white;
        background-color: gray;
        border: skyblue;
        cursor: pointer;
        border-radius: 3px;
        transition: background-color 0.3s ease;
        font-size: 14px;
        
      

    }

    .btn-switch.Active {
        background-color: #17a2b8;
    }

    
    
    
  



   
</style>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

<!-- DataTable CSS -->
<link rel="stylesheet" href="https://cdn.datatables.net/2.1.8/css/dataTables.dataTables.min.css">
<link rel="stylesheet" href="https://cdn.datatables.net/fixedheader/4.0.1/css/fixedHeader.dataTables.min.css">

<!-- SweetAlert 2 CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">


<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Category Management</h2>
            <p>Perform actions: update or remove offers, edit status, view, or delete categories.</p>
        </div>
    </div>

    <header class="card-header">  
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3">
                        <form class="p-4 shadow-sm rounded " method="post" id="formSubmission">
                            <!-- Category Name -->
                            <div class="mb-4">
                                <label for="categoryName" class="form-label fw-bold">Category Name</label>
                                <input type="text" placeholder="Type here" name="categoryName" class="form-control border-radius" id="categoryName" >
                                <div class="error-message" id="categoryName-error" style="color: red; display: none;"></div>
                            </div>

                            <!-- Parent Category -->
                            <div class="mb-4">
                                <label for="parentCategory" class="form-label fw-bold">Parent Category</label>
                                <select id="parentCategory" name="parentCategory" class="form-select border-radius" >
                                    <option value="">Select</option>
                                    <option value="Men">Men</option>
                                    <option value="Women">Women</option>
                                    <option value="Kids">Kids</option>
                                    <option value="General">General</option>
                                </select>
                                <div class="error-message" id="parentCategory-error" style="color: red; display: none;"></div>
                            </div>

                            <!-- Status -->
                            <div class="mb-4">
                                <label for="status" class="form-label fw-bold">Status</label>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="status" id="active" value="active" >
                                    <label class="form-check-label" for="active">Active</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="status" id="inactive" value="inactive">
                                    <label class="form-check-label" for="inactive">Inactive</label>
                                </div>
                                <div class="error-message" id="status-error" style="color: red; display: none;"></div>

                            </div>

                            <!-- Category Offer -->
                            <div class="mb-4">
                                <label for="categoryOffer" class="form-label fw-bold">Category Offer (%)</label>
                                <input type="number" class="form-control" name="categoryOffer" id="categoryOffer" placeholder="Enter offer percentage" >
                                <div class="error-message" id="categoryOffer-error" style="color: red; display: none;"></div>
                            </div>

                            <!-- Category Description -->
                            <div class="mb-4">
                                <label for="categoryDescription" class="form-label fw-bold">Category Description</label>
                                <textarea placeholder="Type here" class="form-control border-radius-lg" name="categoryDescription" id="categoryDescription" ></textarea>
                                <div class="error-message" id="categoryDescription-error" style="color: red; display: none;"></div>
                            </div>

                            <!-- Submit Button -->
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary btn-lg border-radius-lg">Create Category</button>
                            </div>
                        </form>
                    </div>

                    <!-- Table Display -->
                    <div class="col-md-9">
                        <div class="table-responsive">
                            <table class="table table-hover display bg-black" id="myTable">
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Description</th>
                                        <th>Parent Category</th>
                                        <th>Update/Remove Category Offer </th>
                                        <th>Set Status</th>
                                        <th class="text-end">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% data.forEach(category => { %>
                                        <tr>
                                            <td><%= category.name.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ') %>
                                            </td>
                                            <td><%= category.description%></td>
                                            <td><%= category.parentCategory %></td>
                                            <td class="text-center" style="border: 1px solid grey;">
                                                <!-- Flex container for better alignment -->
                                                <div class="d-flex justify-content-between align-items-center flex-column flex-md-row">
                                                    <!-- Update Button aligned to the left -->
                                                    <button class="btn btn-success btn-sm" style="color: white;" onclick="updateOffer('<%= category._id %>')">Update</button>
                                                    
                                                    <!-- Centered Offer Percentage Display -->
                                                    <span class="offer mx-2"><%= category.categoryOffer === 0 ? 'Nill' : category.categoryOffer %>%</span>
                                                    
                                                    <!-- Remove Button aligned to the right -->
                                                    <button class="btn btn-danger btn-sm" onclick="removeOffer('<%= category._id %>')">Remove</button>
                                                </div>
                                            </td>
                                            <td>
                                                <button 
                                                    id="switchBtn<%= category._id %>" 
                                                    class="btn-switch <%= category.status ? 'Active' : 'Inactive' %> btn-sm font-sm" 
                                                    data-category-id="<%= category._id %>"
                                                    data-category-status="<%= category.status %>"
                                                    onclick="updateCategoryStatus(this)">
                                                    <%= category.status ? 'Active' : 'Inactive' %>
                                                </button>
                                            </td>                                           
                                            <td class="text-end">
                                                <div class="dropdown" >
                                                    <a href="#" data-bs-toggle="dropdown" class="btn btn-primary btn-sm font-sm" style="padding: 10px;">
                                                        <i class="material-icons md-more_horiz"></i>
                                                    </a>
                                                    <div class="dropdown-menu">
                                                        <a class="dropdown-item" href="/admin/editCategory?id=<%= category._id %>">View/Edit info</a>
                                                        <a class="dropdown-item text-danger" href="#" onclick="deleteCategory('<%= category._id %>'); return false;">Delete</a>
                                                        <!-- Here, return false; prevents the link from navigating, ensuring the deleteCategory function is called instead.-->
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    <% }) %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
</section>
<%- include("../../views/partials/admin/footer") %>

<!-- DataTable Script -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/2.1.8/js/dataTables.min.js"></script>
<script src="https://cdn.datatables.net/fixedheader/4.0.1/js/dataTables.fixedHeader.min.js"></script>
<!-- SweetAlert 2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

<script>
$(document).ready(function () {
    $('#myTable').DataTable({
        fixedHeader: true,
        lengthMenu: [8, 20, 50, 100],
        pageLength: 8,
        responsive: true,
        language: {
            search: "_INPUT_",
            searchPlaceholder: "Search categories, description, parent category, status, or offer..."
        },
        
    });

});

document.getElementById('formSubmission').addEventListener("submit", (event) => {
    event.preventDefault();
    let isValid = true;

    const name = document.getElementById('categoryName').value.trim();
    const description = document.getElementById('categoryDescription').value.trim();
    const parentCategory = document.getElementById('parentCategory').value;
    const categoryOffer = document.getElementById('categoryOffer').value;
    const status = document.querySelector('input[name="status"]:checked') ? document.querySelector('input[name="status"]:checked').value : '';


    // Category Name Validation
    if (!name) {
        document.getElementById("categoryName-error").innerHTML = 'Category name is required';
        document.getElementById('categoryName-error').style.display = 'block';
        isValid = false;
    } else if (!/^[a-zA-Z]+( [a-zA-Z]+)*$/.test(name)) {
        document.getElementById('categoryName-error').innerHTML = "Name can only contain letters and spaces between words";
        document.getElementById('categoryName-error').style.display = 'block';
        isValid = false;
    } else {
        document.getElementById('categoryName-error').style.display = 'none';
    }

    // Parent Category Validation
    if (!parentCategory) {
        document.getElementById('parentCategory-error').innerHTML = "Please select a Parent Category";
        document.getElementById('parentCategory-error').style.display = 'block';
        isValid = false;
    } else {
        document.getElementById("parentCategory-error").style.display = 'none';
    }
    // status validation

    if(status === ""){
        document.getElementById('status-error').innerHTML = "Please select the status";
        document.getElementById('status-error').style.display = 'block';
        isValid = false;
    } else {
        document.getElementById("status-error").style.display = 'none';
    }

    // Category Offer Validation
    if(categoryOffer===""){
        document.getElementById('categoryOffer-error').innerHTML = 'Category offer is required'
        document.getElementById('categoryOffer-error').style.display = 'block'
        isValid = false
    }else if( categoryOffer < 0 || categoryOffer > 100) {
        document.getElementById("categoryOffer-error").innerHTML = "Category offer should be between 0 and 100";
        document.getElementById("categoryOffer-error").style.display = 'block';
        isValid = false;
    } else {
        document.getElementById("categoryOffer-error").style.display = 'none';
    }

    // Description Validation
    if (!description) {
        document.getElementById("categoryDescription-error").innerHTML = "Description is required";
        document.getElementById("categoryDescription-error").style.display = 'block';
        isValid = false;
    } else {
        document.getElementById("categoryDescription-error").style.display = 'none';
    }

    if (isValid) {
       

        fetch('/admin/addCategory', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body:JSON.stringify({name,description,parentCategory,status,categoryOffer})

            //can use below type also where we dont want to set the headers and it will take directly
            //name from the form and send in body like below code
            // body: new FormData(document.getElementById('formSubmission')),
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(errorData => {
                    throw new Error(errorData.message); // Create an error with the message
            });
            }
            return response.json();
        })
        .then(data => {
            // Handle the successful response (show a Swal notification)
            if (data.message) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: data.message
                }).then(() => {
                    location.reload(); // Reloads the page to show the new category
                });
            }
        })
        .catch(error => {
            console.error('Error happend:', error);
            Swal.fire({
                title: 'Oops!',
                text: error.message,
                icon: 'error',
                confirmButtonText: 'OK'
            });
        });
    
    }
});
</script>

<!--Add remov offer-->
<script>
    async function updateOffer(categoryId) {
        const { value: amount } = await Swal.fire({
            title: "Offer in percentage",
            input: 'number',
            inputLabel: "Percentage",
            inputPlaceholder: "%",
        });

        if (amount) {
            try {
                const response = await fetch("/admin/addCategoryOffer?_method=PATCH", {
                    method: 'POST', // Using method override to make this a PATCH request
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ percentage: amount, categoryId: categoryId })
                });

                const result = await response.json();

                if(!result.status && result.message.includes("Offer percentage must be between 1 and 100")){
                    await Swal.fire({
                        title:'Warning',
                        text:result.message,
                        icon:"warning",
                        confirmButtonText: 'OK'
                    })
                    return; //Exit the function after showing the warning as no need to go for further part

                }
            

                // Handle warning message and confirmation
                if (!result.status && result.message.includes("Some products have individual offers. Confirm to apply the category discount.")) {
                    const confirmAction = await Swal.fire({
                        title: "Warning",
                        text: result.message,
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonText: "Confirm",
                        cancelButtonText: "Cancel",
                    });

                    // If admin confirms, retry with forced confirmation
                    if (confirmAction.isConfirmed) {
                        const confirmResponse = await fetch("/admin/addCategoryOffer?_method=PATCH", {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ categoryId, percentage: amount, confirm: true })
                        });

                        const confirmResult = await confirmResponse.json();
                        await Swal.fire("Success", "Category offer added successfully", "success");
                        location.reload(); // Reloads the page to show the new category
                    }
                } else if (result.status) {
                    // If no warnings, show success message directly
                    await Swal.fire("Success", result.message, "success");
                    location.reload(); // Reloads the page to show the new category
                }

            } catch (error) {
                Swal.fire(
                    "Error",
                    "An error occurred while adding the offer",
                    "error"
                );
                console.error('Error adding offer', error);
            }
        }
    }

    async function removeOffer(categoryId){
        try {
            const response = await fetch('/admin/removeCategoryOffer?_method=PATCH',{
                method:'POST',
                headers:{
                    "content-type":"application/json"
                },
                body:JSON.stringify({
                    categoryId:categoryId,

                })
            });

            const data = await response.json();//data from backend
            if(response.ok&&data.status===true){
                Swal.fire(
                    "Offer Removed",
                    "Offer has been removed successfully",
                    "success"
                ).then(()=>{
                    location.reload();
                });
            }else{
                Swal.fire(
                    "Failed",
                    data.message|| "Removing offer failed",
                    "error"
                ).then(()=>{
                    location.reload();
                });
            }
            
        } catch (error) {
            Swal(
                "Error",
                "An error occured while removing the offer",
                'error'
            );
            console.log('Error while removing offer',error)
        }

    }

</script>
<script>
    function updateCategoryStatus(button) {
        const categoryId = button.getAttribute('data-category-id');
        const categoryStatus = button.getAttribute('data-category-status') === 'true'; // Convert to boolean

        fetch(`/admin/${categoryStatus ? 'inactivateCategory' : 'activateCategory'}?_method=PATCH`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ categoryId }) // Fix typo here
        })
        .then(response => response.json())
        .then(data => {
            if (data.status === true ) {
                Swal.fire({
                    title: 'Success',
                    text: data.message,
                    icon: "success",
                    confirmButtonText: 'OK'
                }).then(() => {
                    // Update button status and text on successful activation/inactivation
                    button.setAttribute('data-category-status', !categoryStatus); // Toggle status
                    button.textContent = !categoryStatus ? 'Active' : 'Inactive'; // Toggle text
                    button.classList.toggle('Active'); // Add/remove Active class
                });
            } else {
                Swal.fire({
                    title: 'Failed',
                    text: data.message || 'Server error occurred',
                    icon: "error",
                    confirmButtonText: 'OK'
                });
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                title: 'Error',
                text: 'An unexpected error occurred.',
                icon: "error",
                confirmButtonText: 'OK'
            });
        });
    }
</script>


<!--Delete category-->
<script>
    function deleteCategory(categoryId){
        Swal.fire({
            title:'Are you sure?',
            text:'This action cannot be undone!',
            icon: 'warning',
            showCancelButton:true,
            confirmButtonText:'Yes, delete it!',
            cancelButtonText: 'No, cancel'
        }).then((result)=>{
            if(result.isConfirmed){
                fetch(`/admin/deleteCategory/${categoryId}`,{
                    method:'DELETE',
                    headers:{
                        'Content-Type':'application/json'
                    }
                })
                .then(response =>{
                    if(!response.ok){
                        return response.json().then(errorData =>{
                            throw new Error(errorData.message)
                        })
                    }
                    return response.json();

                })
                .then(data=>{
                    if(data.success){
                        Swal.fire({
                            icon:'success',
                            title:'Deleted!',
                            text:'Category has been deleted',
                        }).then(()=>{
                            location.reload()//reload the page to reflect the deletion
                        });
                    }
                }).catch(error=>{
                    console.log('Error while deleting the category',error);
                    Swal.fire({
                        title:'Oops',
                        text:error.message || 'An error occured while deleting the category.',
                        icon:'error',
                        confirmButtonText:'OK'
                    })
                })

            }
        })
    }

</script>
